Fancytree 2 Migration
====================

Requirements
  DynaTree 1:
    jQuery 1.4+
    jQuery UI 1.7+ (?)
  Fancytree 2:
    jQuery 1.5+ (1.6+ recommended)
    jQuery UI 1.8.6+

node.data removed:
  DynaTree 1:
    node.bExpanded = true  // current status
    node.bSelected = true 
    node.data.expand = false  // status read from initialization source
  Fancytree 2:
    node.expanded = true  // current status


Class names for initialization are now unified with node property names:
  DynaTree 1:
    <li class='expand'>
  Fancytree 2:
    <li class='expanded'>


Node data
---------
Most properties of FancytreeNode are renamed moved from the data object to top
level. 
  DynaTree 1:                 Fancytree 2:

  node.childList              node.children
  node.hasSubSel              node.partsel
  node.bExpanded              node.expanded
  node.bSelected              node.selected
  node.data.key               node.key
  node.data.isFolder          node.folder
  node.data.isLazy            node.lazy
  node.data.addClass          node.extraClasses
  node.data.unselectable      ?
  node.data.activate          (initDict.active is used to set tree.activeNode)
  node.data.focus             -
  node.data.expand            -
  node.data.select            -
  node.data.href              node.href
  node.data.target            ?
  node.data.tooltip           node.tooltip
  node.data.hideCheckbox      ?
  node.data.isStatusNode      ?
  node.data.icon              ?

  tree.tnFocus                 ? (focus is dirctly set via events)
  tree.activeNode              tree.activeNode
  tree.tnRoot                  tree.root


Events
------
All events have been renamed according to common jQuery widget style.
Event arguments have been unified to `data`.

Events cannot return values (except for `false` to prevent default handling).
The return value must be assigned to `data.result` instead.

TODO: `this` == FancytreeNode?

Events with flags have changed (applies to (onSelect, onQuerySelect, ...)

  DynaTree 1:

      onQueryExpand: function(flag, node){
        if(flag === true && node.data.isFolder) 
          return false;
      },
      onSelect: function(flag, node){
        if(flag){
          node.activate();
        }
      }

  Fancytree 2:

      queryexpand: function(data){
        if(data.node.expanded === false && data.node.folder) 
          return false;
      },
      select: function(ctx){
        if(ctx.node.selected){
          ctx.node.activate();
        }
      }


Lazy loading handling has changed:

  DynaTree 1:

    $("#tree").fancytree({
      initAjax: {
        url: "/getTopLevelNodesAsJson"
      },
      onLazyRead: function(node){
        node.appendAjax({
          url: "/getChildrenAsJson",
          data: {key: node.data.key}
        });
      },

  Fancytree 2:

    $("#tree").fancytree({
      source: {
        url: "/getTopLevelNodesAsJson"
      },
      lazyload: function(e, data){
        data.result = {
          url: "/getChildrenAsJson",
          data: {key: data.node.key}
        };
      },


Misc.
-----
- DynaTree was renamed to Fancytree (also DynaTreeNode was renamed to FancytreeNode).
- node.icon is no longer supported
- onDeactivate was removed (use activate and check ctx.node.active instead).
- DND no longer requires to implement onDragStart / onDrop (dnd is enabled if the extension is used)
- node.getEventTargetType(event)
  -> $.ui.fancytree.getEventTargetType(event)
- node.toggleSelect() --> node.toggleSelected()
  node.select() --> node.setSelected()
- class fancytree-radio must be set for the container (not node)
- $("#tree2").fancytree("getRoot") --> $("#tree2").fancytree("getRoot")


New features
============
- Extensions
- Deferreds
- preload
- 


CSS
===
- fancytree-connector has been removed


Removed features
============
- clickFolderMode was